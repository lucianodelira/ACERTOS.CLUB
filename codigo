<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Jogo das Minas - Cobrança Pix</title>
</head>
<body>
    <h1>Cobrança Pix - Jogo das Minas</h1>
    <input type="number" id="valor" placeholder="Digite o valor">
    <button onclick="criarCobrancaPix()">Criar Cobrança Pix</button>
    <div id="resultado"></div>

    <script>
        // Token de Acesso (não seguro expor diretamente)
        const ACCESS_TOKEN = 'APP_USR-7747339136129229-101207-a40498497d4cb77cb6c04a016aa78ede-244727008'; 

        // Função para criar cobrança Pix
        async function criarCobrancaPix() {
            const valor = document.getElementById('valor').value;
            if (!valor) {
                alert("Por favor, insira um valor.");
                return;
            }

            const url = 'https://api.mercadopago.com/v1/payments';
            const payload = {
                transaction_amount: parseFloat(valor),
                description: 'Cobrança Pix - Jogo das Minas',
                payment_method_id: 'pix',
                payer: { email: 'cliente@example.com' }
            };

            try {
                const response = await fetch(url, {
                    method: 'POST',
                    headers: {
                        'Authorization': `Bearer ${ACCESS_TOKEN}`,
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(payload)
                });

                if (!response.ok) throw new Error("Erro ao criar cobrança");

                const result = await response.json();
                document.getElementById('resultado').innerHTML = `
                    <p>QR Code Base64: <img src="data:image/png;base64,${result.point_of_interaction.transaction_data.qr_code_base64}" alt="QR Code"></p>
                    <p>Payment ID: ${result.id}</p>
                    <p>Pix Key: ${result.point_of_interaction.transaction_data.qr_code}</p>
                `;
            } catch (error) {
                console.error("Erro:", error);
                alert("Falha ao criar cobrança Pix. Verifique o console para mais detalhes.");
            }
        }

        // Função para verificar o status do pagamento
        async function verificarPagamento(paymentId) {
            const url = `https://api.mercadopago.com/v1/payments/${paymentId}`;

            try {
                const response = await fetch(url, {
                    method: 'GET',
                    headers: { 'Authorization': `Bearer ${ACCESS_TOKEN}` }
                });

                if (!response.ok) throw new Error("Erro ao verificar pagamento");

                const result = await response.json();
                const status = result.status === 'approved' ? 'Pagamento aprovado! Tentativas liberadas.' : 'Pagamento não confirmado.';
                document.getElementById('resultado').innerHTML += `<p>Status: ${status}</p>`;
            } catch (error) {
                console.error("Erro:", error);
                alert("Falha ao verificar o status do pagamento. Verifique o console para mais detalhes.");
            }
        }
    </script>
</body>
</html>
